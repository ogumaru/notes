<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ogumaru.github.io/notes/</id>
    <title>Notes Blog</title>
    <updated>2022-07-18T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ogumaru.github.io/notes/"/>
    <subtitle>Notes Blog</subtitle>
    <entry>
        <title type="html"><![CDATA[【JavaScript】プリミティブでない値を持つSetにて重複が発生する]]></title>
        <id>2022-07-18duplicated-value-in-set</id>
        <link href="https://ogumaru.github.io/notes/2022-07-18duplicated-value-in-set"/>
        <updated>2022-07-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[概要]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要">概要<a class="hash-link" href="#概要" title="Direct link to heading">​</a></h2><p>TypeScript にて、タプル風(<code>[T, T]</code>)の配列があり、これの中身をユニークにしたい場面があった。</p><p><code>Set</code>を経由すれば重複排除できると思ったが、見た目上同じオブジェクトの重複は排除されなかった。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="結論">結論<a class="hash-link" href="#結論" title="Direct link to heading">​</a></h2><p>JavaScript における配列の同値比較が<code>false</code>になるため。</p><p>厳密にユニークなコレクションを作成する場合は、deepEqual 相当の確認が必要そう。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="実行環境">実行環境<a class="hash-link" href="#実行環境" title="Direct link to heading">​</a></h2><table><thead><tr><th>実行環境</th><th>バージョン</th></tr></thead><tbody><tr><td>node</td><td>v16.15.0</td></tr><tr><td>python3</td><td>Python 3.10.4</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="javascript-の挙動と-python-との比較">JavaScript の挙動と Python との比較<a class="hash-link" href="#javascript-の挙動と-python-との比較" title="Direct link to heading">​</a></h2><p>タプル風の配列リテラルを<code>add</code>すると、重複した値がそれぞれが追加されてしまう。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> unique </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"hoge"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huga"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set(1) { [ 'hoge', 'huga' ] }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"hoge"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huga"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set(2) { [ 'hoge', 'huga' ], [ 'hoge', 'huga' ] }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Python ではできた気がしたので確認する。</p><p>(なお<code>["hoge", "huga"]</code>は<code>Hashable</code>でないため<code>set</code>には追加できない)</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">unique </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token builtin">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hoge"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huga"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># {('hoge', 'huga')}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hoge"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huga"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># {('hoge', 'huga')}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>リテラルのタプルに対して重複排除ができている。</p><p>JavaScript でも、オブジェクトが同一になるため、下記では意図した通りに重複が排除される。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> unique </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> tuple </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"hoge"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huga"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tuple</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set(1) { [ 'hoge', 'huga' ] }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tuple</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set(1) { [ 'hoge', 'huga' ] }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>JavaScript では Python におけるタプル相当のデータ型がないため、上記コードでは実際にはミュータブルな配列となる。</p><p><code>Object.freeze()</code>でイミュータブルにしてみたが、結果は変わらなかった。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> unique </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token known-class-name class-name">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"hoge"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huga"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set(1) { [ 'hoge', 'huga' ] }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">unique</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token known-class-name class-name">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">freeze</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"hoge"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"huga"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Set(2) { [ 'hoge', 'huga' ], [ 'hoge', 'huga' ] }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="仕様の確認">仕様の確認<a class="hash-link" href="#仕様の確認" title="Direct link to heading">​</a></h2><p>MDN の<code>Set</code>のページを見ると、<code>-0</code>と<code>+0</code>について触れられている。</p><blockquote><p>See "Key equality for -0 and 0" in the browser compatibility table for details.</p></blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#value_equality" target="_blank" rel="noopener noreferrer">Set - JavaScript | MDN (developer.mozilla.org)</a></p><p>等価比較のページを見ると、</p><blockquote><p>SameValueZero: used by %TypedArray% and ArrayBuffer constructors, as well as Map and Set operations, and also String.prototype.includes and Array.prototype.includes since ES2016</p></blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness" target="_blank" rel="noopener noreferrer">Equality comparisons and sameness - JavaScript | MDN (developer.mozilla.org)</a></p><p><code>SameValueZero</code>の TC39 へリンクされていたのでこちらも確認。</p><blockquote><p>SameValueZero differs from SameValue only in that it treats +0𝔽 and -0𝔽 as equivalent.</p></blockquote><p><a href="https://tc39.es/ecma262/#sec-samevaluezero" target="_blank" rel="noopener noreferrer">SameValueZero | ECMAScript® 2023 Language&nbsp;Specification (tc39.es)</a></p><p><code>SameValue</code>と<code>+0</code>と<code>-0</code>の比較結果のみ異なるとあるため、<a href="https://tc39.es/ecma262/#sec-samevalue" target="_blank" rel="noopener noreferrer"><code>SameValue</code></a>を確認すると、</p><blockquote><ol><li><p>If Type(x) is different from Type(y), return false.</p></li><li><p>If Type(x) is Number, then</p><p>a. Return Number::sameValue(x, y).</p></li><li><p>If Type(x) is BigInt, then</p><p>a. Return BigInt::sameValue(x, y).</p></li><li><p>Return SameValueNonNumeric(x, y).</p></li></ol></blockquote><p>とのことなので<a href="https://tc39.es/ecma262/#sec-samevaluenonnumeric" target="_blank" rel="noopener noreferrer"><code>SameValueNonNumeric</code></a>を確認。</p><blockquote><ol><li><p>Assert: Type(x) is the same as Type(y).</p></li><li><p>If Type(x) is Undefined, return true.</p></li><li><p>If Type(x) is Null, return true.</p></li><li><p>If Type(x) is String, then</p><p>a. If x and y are exactly the same sequence of code units (same length and same code units at corresponding indices), return true; otherwise, return false.</p></li><li><p>If Type(x) is Boolean, then</p><p>a. If x and y are both true or both false, return true; otherwise, return false.</p></li><li><p>If Type(x) is Symbol, then</p><p>a. If x and y are both the same Symbol value, return true; otherwise, return false.</p></li><li><p>If x and y are the same Object value, return true. Otherwise, return false.</p></li></ol></blockquote><p>タプルの場合<code>7</code>にて評価されると思われ、<code>same Object value</code>ではないということになるようだ。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="same-object-value-とは">same Object value とは<a class="hash-link" href="#same-object-value-とは" title="Direct link to heading">​</a></h2><p>TC39にはこれ以上のリンクがなかったが、deepEqual相当の比較を行うことで重複の確認はできそう。</p><p>修正 PR いただけるとありがたいです。</p>]]></content>
        <author>
            <name>ogumaru</name>
            <uri>https://github.com/ogumaru</uri>
        </author>
        <category label="javascript" term="javascript"/>
        <category label="python" term="python"/>
    </entry>
</feed>